* 시간
종료 시간:
시작 시간:
소요 시간:

* 주제:
벨트, 컨베이어 벨트 그리고 로봇

* 설명:
길이가 2N인 컨베이어 벨트가 있을 때, 이 컨베이어를 감싸는 길이가 N인 두 벨트가 있다.
상단부 벨트는 왼쪽에서 시작해 1부터 N까지이며, 하단부 벨트는 오른쪽에서 시작하여 N+1부터 2N까지이다.
컨베이어 벨트는 로봇을 운반하며, 로봇은 조건에 따른 이동이 있고 로봇이 벨트에 올라가거나 움직이는 경우 벨트의 내구도가 1 감소한다.
전체 벨트 중 벨트의 내구도가 0인 벨트의 개수가 K개 이상이 되면 작동을 중지한다.
로봇이 종점에 도달하면 즉시 하차한다.

* 제약 사항:
단일 벨트의 길이 N은 2이상 100이하이다.
벨트 내구도 한계 K는 1이상 2N이하이다.
벨트의 수명 A(i)는 1이상 1,000이하이다.

* 입력:
단일벨트길이N 수명한계K
수명1 수명2 ... 수명2N

* 출력:
종료단계

* 풀이:
로직
N과 K 수령
크기 2N의 배열 life에 벨트의 수명 수령   // 벨트 수명에 영향이 가면 수명을 갱신
상단 벨트와 하단 벨트를 위해 두 개의 Deque 객체 up과 down을 선언한다.
0부터 N-1까지의 수명을 up에 add한다.        // 뒤에 추가
N부터 2N-1까지의 수명을 down에  push한다.  // 앞에 추가
로봇의 순서를 저장하는 로봇 queue를 생성, 로봇이 올라가면 추가하고 내려오면 제거한다.
// 초기 설정 완료

do{
 벨트를 회전시킨다. (up에서 뒤에서 제거하여 down에 뒤에 붙이고, down에서 앞에서 제거하여 up에 앞에 붙인다.)
 가장 먼저 벨트에 올라간 로봇부터, 이동할 수 있다면 이동시킨다. (수명 감소, 수명 갱신)   // 로봇의 순서 지정 필요
 (이동 가능 조건: 다음 벨트가 비어있고, 수명이 1이상인 경우)
 up의 첫 번째 요소의 내구도가 0이 아니라면 로봇을 올린다. (수명 감소, 수명 갱신)
} while(state < limit);